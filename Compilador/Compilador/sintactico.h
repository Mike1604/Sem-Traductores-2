#ifndef SINTACTICO_H
#define SINTACTICO_H
#include <iostream>
#include <stack>
#include <vector>
#include <map>
#include "sintacticonode.h"
using namespace std;
class Sintactico
{
private:
    vector<SintacticoNode> stack;
    vector<pair<string,int>> tokens;
    vector<string> output;
    vector<string> input;
    vector<string> pila;
    int actualState;

    vector<vector<int>> lr1={
                    {0,	0,	0,	0,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-3,	1,	2,	3,	4,	0,	6,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-2,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-3,	0,	7,	3,	4,	0,	6,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	-5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {8,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	-6,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-6,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-8,	10,	11,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	9,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	12,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {13,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	15,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-11,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	14,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-7,	0,	0,	0,	-7,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-7,	0,	-7,	-7,	-7,	0,	-7,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-8,	10,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	16,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	17,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {18,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-9,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	20,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	19,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	22,	0,	-13,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	21,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	-10,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-10,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {27,	0,	0,	0,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-16,	0,	28,	29,	30,	0,	0,	0,	0,	0,	25,	0,	0,	0,	0,	0,	23,	24,	0,	26,	0,	0,	0,	0,	0,	0,	31,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-12,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	32,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	33,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {27,	0,	0,	0,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-16,	0,	28,	29,	30,	0,	0,	0,	0,	0,	25,	0,	0,	0,	0,	0,	34,	24,	0,	26,	0,	0,	0,	0,	0,	0,	31,	0,	0,},
                    {-18,	0,	0,	0,	-18,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-18,	0,	-18,	-18,	-18,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-19,	0,	0,	0,	-19,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-19,	0,	-19,	-19,	-19,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	36,	0,	0,	0,	35,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	37,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	38,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	-30,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	39,	0,	0,	44,	45,	0,	40,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	50,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {51,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	-15,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-15,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-17,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	52},
                    {46,    47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	-32,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	53,	0,	44,	45,	0,	54},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	55},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	56},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	57,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	-31,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	64},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	65},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	66},
                    {0,	0,	0,	0,	0,	-53,	-53,	-53,	-53,	-53,	0,	-53,	-53,	-53,	0,	-53,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-36,	-36,	-36,	-36,	-36,	0,	-36,	-36,	-36,	0,	-36,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-37,	-37,	-37,	-37,	-37,	0,	-37,	-37,	-37,	36,	-37,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-38,	-38,	-38,	-38,	-38,	0,	-38,	-38,	-38,	0,	-38,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-39,	-39,	-39,	-39,	-39,	0,	-39,	-39,	-39,	0,	-39,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-40,	-40,	-40,	-40,	-40,	0,	-40,	-40,	-40,	0,	-40,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-26,	0,	0,	0,	-26,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-26,	0,	-26,	-26,	-26,	-26,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	22,	0,	-13,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	67,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	68,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	69,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	0,	71,	0,	-34,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	70,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	0,	0,	0,	72,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	0,	0,	0,	73,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-25,	0,	0,	0,	-25,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-25,	0,	-25,	-25,	-25,	-25,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	74},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	75},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	76},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	77},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	78},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	79},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	0,	0,	0,	80,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-45,	-45,	-45,	-45,	-45,	0,	-45,	-45,	-45,	0,	-45,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-46,	-46,	-46,	-46,	-46,	0,	-46,	-46,	-46,	0,	-46,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-14,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-22,	0,	0,	0,	-22,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-22,	0,	-22,	-22,	-22,	-22,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-41,	-41,	-41,	-41,	-41,	0,	-41,	-41,	-41,	0,	-41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-33,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {46,	47,	48,	49,	0,	42,	0,	0,	0,	0,	43,	0,	0,	0,	41,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	44,	45,	0,	81},
                    {27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	85,	0,	0,	28,	29,	30,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	83,	0,	84,	0,	0,	0,	0,	31,	82,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	85,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	86,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-47,	-47,	-47,	-47,	-47,	0,	-47,	-47,	-47,	0,	-47	,0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-48,	58,	-48,	-48,	-48,	0,	-48,	-48,	-48,	0,	-48,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	-49,	-49,	-49,	0,	-49,	-49,	-49,	0,	-49,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	-50,	-50,	0,	-50,	-50,	-50,	0,	-50,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	-51,	-51,	0,	61,	-51	-51,	0,	-51,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	-52,	62,	0,	61,	-52,	-52,	0,	-52,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	-44,	-44,	-44,	-44,	-44,	0,	-44,	-44,	-44,	0,	-44,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	59,	58,	60,	63,	62,	0,	61,	0,	71,	0,	-34,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	87,	0,	0,	0,	0,},
                    {-27,	0,	0,	0,	-27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-27,	0,	-27,	-27,	-27,	89,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	88,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-42,	0,	0,	0,	-42,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-42,	0,	-42,	-42,	-42,	-42,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-43,	0,	0,	0,	-43,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-43,	0,	-43,	-43,	-43,	-43,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-20,	0,	28,	29,	30,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	90,	91,	0,	0,	0,	0,	0,	0,	31,	0,	0,},
                    {-24,	0,	0,	0,	-24,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-24,	0,	-24,	-24,	-24,	-24,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-35,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-23,	0,	0,	0,	-23,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-23,	0,	-23,	-23,	-23,	-23,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	85,	0,	0,	28,	29,	30,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	83,	0,	84,	0,	0,	0,	0,	31,	92,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	93,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-20,	0,	28,	29,	30,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	94,	91,	0,	0,	0,	0,	0,	0,	31,	0,	0,},
                    {-28,	0,	0,	0,	-28,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-28,	0,	-28,	-28,	-28,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {-29,	0,	0,	0,	-29,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-29,	0,	-29,	-29,	-29,	-29,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
                    {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-21,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,},
    };
    map<std::string, int> reduction = {
            {"<programa>", 24},
            {"<Definiciones>", 25},
            {"<Definicion>", 26},
            {"<DefVar>", 27},
            {"<ListaVar>", 28},
            {"<DefFunc>", 29},
            {"<Parametros>", 30},
            {"<ListaParam>", 31},
            {"<BloqFunc>", 32},
            {"<DefLocales>", 33},
            {"<DefLocal>", 34},
            {"<Sentencias>", 35},
            {"<Sentencia>", 36},
            {"<Otro>", 37},
            {"<Bloque>", 38},
            {"<ValorRegresa>", 39},
            {"<Argumentos>", 40},
            {"<ListaArgumentos>", 41},
            {"<Termino>", 42},
            {"<LlamadaFunc>", 43},
            {"<SentenciaBloque>", 44},
            {"<Expresion>", 45}
        };
    map<string,pair<int,string>> rules = {
            {"R1",{1,"<programa>"}},
            {"R2",{0,"<Definiciones>"}},
            {"R3",{2,"<Definiciones>"}},
            {"R4",{1,"<Definicion>"}},
            {"R5",{1,"<Definicion>"}},
            {"R6",{4,"<DefVar>"}},
            {"R7",{0,"<ListaVar>"}},
            {"R8",{3,"<ListaVar>"}},
            {"R9",{6,"<DefFunc>"}},
            {"R10",{0,"<Parametros>"}},
            {"R11",{3,"<Parametros>"}},
            {"R12",{0,"<ListaParam>"}},
            {"R13",{4,"<ListaParam>"}},
            {"R14",{3,"<BloqFunc>"}},
            {"R15",{0,"<DefLocales>"}},
            {"R16",{2,"<DefLocales>"}},
            {"R17",{1,"<DefLocal>"}},
            {"R18",{1,"<DefLocal>"}},
            {"R19",{0,"<Sentencias>"}},
            {"R20",{2,"<Sentencias>"}},
            {"R21",{4,"<Sentencia>"}},
            {"R22",{7,"<Sentencia>"}},
            {"R23",{6,"<Sentencia>"}},
            {"R24",{3,"<Sentencia>"}},
            {"R25",{2,"<Sentencia>"}},
            {"R26",{0,"<Otro>"}},
            {"R27",{2,"<Otro>"}},
            {"R28",{3,"<Bloque>"}},
            {"R29",{0,"<ValorRegresa>"}},
            {"R30",{1,"<ValorRegresa>"}},
            {"R31",{3,"<Argumentos>"}},
            {"R32",{2,"<Argumentos>"}},
            {"R33",{0,"<ListaArgumentos>"}},
            {"R34",{3,"<ListaArgumentos>"}},
            {"R35",{1,"<Termino>"}},
            {"R36",{1,"<Termino>"}},
            {"R37",{1,"<Termino>"}},
            {"R38",{1,"<Termino>"}},
            {"R39",{1,"<Termino>"}},
            {"R40",{4,"<LlamadaFunc>"}},
            {"R41",{1,"<SentenciaBloque>"}},
            {"R42",{1,"<SentenciaBloque>"}},
            {"R43",{3,"<Expresion>"}},
            {"R44",{2,"<Expresion>"}},
            {"R45",{2,"<Expresion>"}},
            {"R46",{3,"<Expresion>"}},
            {"R47",{3,"<Expresion>"}},
            {"R48",{3,"<Expresion>"}},
            {"R49",{3,"<Expresion>"}},
            {"R50",{3,"<Expresion>"}},
            {"R51",{3,"<Expresion>"}},
            {"R52",{1,"<Expresion>"}},
        };
    map<string,string> expresiones = {
        {"R1","R1 <programa> ::= <Definiciones> "},
        {"R2","R2<Definiciones> ::= \e  "},
        {"R3","R3 <Definiciones> ::= <Definicion> <Definiciones> "},
        {"R4","R4 <Definicion> ::= <DefVar>"},
        {"R5","R5 <Definicion> ::= <DefFunc> "},
        {"R6","R6 <DefVar> ::= tipo identificador <ListaVar> ; "},
        {"R7","R7 <ListaVar> ::= \e "},
        {"R8","R8 <ListaVar> ::= , identificador <ListaVar> "},
        {"R9","R9 <DefFunc> ::= tipo identificador ( <Parametros> ) <BloqFunc> "},
        {"R10","R10 <Parametros> ::= \e "},
        {"R11","R11 <Parametros> ::= tipo identificador <ListaParam> "},
        {"R12","R12 <ListaParam> ::= \e "},
        {"R13","R13 <ListaParam> ::= , tipo identificador <ListaParam> "},
        {"R14","R14 <BloqFunc> ::= { <DefLocales> } "},
        {"R15","R15 <DefLocales> ::= \e "},
        {"R16","R16 <DefLocales> ::= <DefLocal> <DefLocales> "},
        {"R17","R17 <DefLocal> ::= <DefVar> "},
        {"R18","R18 <DefLocal> ::= <Sentencia> "},
        {"R19","R19 <Sentencias> ::= \e "},
        {"R20","R20 <Sentencias> ::= <Sentencia> <Sentencias> "},
        {"R21","R21 <Sentencia> ::= identificador = <Expresion> ; "},
        {"R22","R22 <Sentencia> ::= if ( <Expresion> ) <SentenciaBloque> <Otro> "},
        {"R23","R23 <Sentencia> ::= while ( <Expresion> ) <Bloque> "},
        {"R24","R24 <Sentencia> ::= return <ValorRegresa> ; "},
        {"R25","R25 <Sentencia> ::= <LlamadaFunc> ; "},
        {"R26","R26 <Otro> ::= \e "},
        {"R27","R27 <Otro> ::= else <SentenciaBloque> "},
        {"R28","R28 <Bloque> ::= { <Sentencias> } "},
        {"R29","R29 <ValorRegresa> ::= \e "},
        {"R30","R30 <ValorRegresa> ::= <Expresion> "},
        {"R31","R31 <Argumentos> ::= \e "},
        {"R32","R32 <Argumentos> ::= <Expresion> <ListaArgumentos> "},
        {"R33","R33 <ListaArgumentos> ::= \e "},
        {"R34","R34 <ListaArgumentos> ::= , <Expresion> <ListaArgumentos> "},
        {"R35","R35 <Termino> ::= <LlamadaFunc> "},
        {"R36","R36 <Termino> ::= identificador "},
        {"R37","R37 <Termino> ::= entero "},
        {"R38","R38 <Termino> ::= real "},
        {"R39","R39 <Termino> ::= cadena "},
        {"R40","R40 <LlamadaFunc> ::= identificador ( <Argumentos> ) "},
        {"R41","R41 <SentenciaBloque> ::= <Sentencia> "},
        {"R42","R42 <SentenciaBloque> ::= <Bloque> "},
        {"R43","R43 <Expresion> ::= ( <Expresion> ) "},
        {"R44","R44 <Expresion> ::= opSuma <Expresion> "},
        {"R45","R45 <Expresion> ::= opNot <Expresion> "},
        {"R46","R46 <Expresion> ::= <Expresion> opMul <Expresion> "},
        {"R47","R47 <Expresion> ::= <Expresion> opSuma <Expresion> "},
        {"R48","R48 <Expresion> ::= <Expresion> opRelac <Expresion> "},
        {"R49","R49 <Expresion> ::= <Expresion> opIgualdad <Expresion> "},
        {"R50","R50 <Expresion> ::= <Expresion> opAnd <Expresion> "},
        {"R51","R51 <Expresion> ::= <Expresion> opOr <Expresion> "},
        {"R52","R52 <Expresion> ::= <Termino> "},
    };
public:
    Sintactico(vector<pair<string,int>> tokens);
    void analize();
    string stackToString();
    string tokensToString();
    vector<string> getOutput();
    vector<string> getInput();
    vector<string> getPila();
};

#endif // SINTACTICO_H
